#pragma once

#include <windows.h>
#include <winternl.h> 
#include <tlhelp32.h> 

typedef struct _MY_LDR_DATA_TABLE_ENTRY {
    LIST_ENTRY InLoadOrderLinks;
    LIST_ENTRY InMemoryOrderLinks;
    LIST_ENTRY InInitializationOrderLinks;
    PVOID DllBase;
    PVOID EntryPoint;
    ULONG SizeOfImage;
    UNICODE_STRING FullDllName;
    UNICODE_STRING BaseDllName; 
} MY_LDR_DATA_TABLE_ENTRY, *PMY_LDR_DATA_TABLE_ENTRY;

// Function Pointer Typedefs
typedef HMODULE(WINAPI* LOADLIBRARYW)(LPCWSTR);
typedef HANDLE(WINAPI* CREATEFILEW)(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
typedef HANDLE(WINAPI* CREATEFILEMAPPINGW)(HANDLE, LPSECURITY_ATTRIBUTES, DWORD, DWORD, DWORD, LPCWSTR);
typedef LPVOID(WINAPI* MAPVIEWOFFILE)(HANDLE, DWORD, DWORD, DWORD, SIZE_T);
typedef BOOL(WINAPI* UNMAPVIEWOFFILE)(LPCVOID);
typedef BOOL(WINAPI* CLOSEHANDLE)(HANDLE);
typedef BOOL(WINAPI* VIRTUALPROTECT)(LPVOID, SIZE_T, DWORD, PDWORD);
typedef HANDLE(WINAPI* CREATETOOLHELP32SNAPSHOT)(DWORD, DWORD);
typedef BOOL(WINAPI* PROCESS32FIRSTW)(HANDLE, LPPROCESSENTRY32W);
typedef BOOL(WINAPI* PROCESS32NEXTW)(HANDLE, LPPROCESSENTRY32W);
typedef HANDLE(WINAPI* OPENPROCESS)(DWORD, BOOL, DWORD);
typedef BOOL(WINAPI* CREATEPROCESSW)(LPCWSTR, LPWSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCWSTR, LPSTARTUPINFOW, LPPROCESS_INFORMATION);
typedef LPVOID(WINAPI* VIRTUALALLOCEX)(HANDLE, LPVOID, SIZE_T, DWORD, DWORD);
typedef BOOL(WINAPI* WRITEPROCESSMEMORY)(HANDLE, LPVOID, LPCVOID, SIZE_T, SIZE_T*);
typedef DWORD(WINAPI* QUEUEUSERAPC)(PAPCFUNC, HANDLE, ULONG_PTR);
typedef DWORD(WINAPI* RESUMETHREAD)(HANDLE);
typedef DWORD(WINAPI* GETFILESIZE)(HANDLE, LPDWORD); 
typedef BOOL(WINAPI* READFILE)(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
typedef int(WINAPI* MESSAGEBOXA)(HWND, LPCSTR, LPCSTR, UINT);

// Added for robust unhooking
typedef UINT(WINAPI* GETSYSTEMDIRECTORYW)(LPWSTR lpBuffer, UINT uSize);


// API Function Structure - Lean and reliable
typedef struct _API_FUNCTIONS {
    LOADLIBRARYW        pLoadLibraryW;
    CREATEFILEW         pCreateFileW;
    CREATEFILEMAPPINGW  pCreateFileMappingW;
    MAPVIEWOFFILE       pMapViewOfFile;
    UNMAPVIEWOFFILE     pUnmapViewOfFile;
    CLOSEHANDLE         pCloseHandle;
    VIRTUALPROTECT      pVirtualProtect;
    GETFILESIZE         pGetFileSize; 
    READFILE            pReadFile;    
    CREATETOOLHELP32SNAPSHOT pCreateToolhelp32Snapshot;
    PROCESS32FIRSTW     pProcess32FirstW;
    PROCESS32NEXTW      pProcess32NextW;
    OPENPROCESS         pOpenProcess;
    CREATEPROCESSW      pCreateProcessW;
    VIRTUALALLOCEX      pVirtualAllocEx;
    WRITEPROCESSMEMORY  pWriteProcessMemory;
    QUEUEUSERAPC        pQueueUserAPC;
    RESUMETHREAD        pResumeThread;
    GETSYSTEMDIRECTORYW pGetSystemDirectoryW; // Added
    MESSAGEBOXA         pMessageBoxA;
} API_FUNCTIONS, * PAPI_FUNCTIONS;


// Logic Prototypes - Updated for new function name
BOOL InitializeAPIs(PAPI_FUNCTIONS pApi);
BOOL PerformAllUnhooking(PAPI_FUNCTIONS pApi);